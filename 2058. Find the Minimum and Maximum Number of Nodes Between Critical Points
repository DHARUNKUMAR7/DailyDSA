class Solution {
    public int[] nodesBetweenCriticalPoints(ListNode head) {
        if(head == null || head .next == null || head.next.next ==  null){
            return new int[]{-1,-1};
        }
        ListNode prev = head , curr = head.next;
        int min = Integer.MAX_VALUE;
        int first = 0;
        int last = 0;
        int i = 2;
        int occur = 0;
        
        while(curr.next != null){
            if((curr.val > prev.val && curr.val > curr.next.val  ) || (curr.val < prev.val && curr.val < curr.next.val  )){
                if(first == 0){
                    first = i;
                }
                occur++;
                if(last != 0 ){
                    min = Math.min(min , i - last );
                }
                last = i;
            }
            curr = curr.next;
            prev = prev.next;
            i++;
        }
        return occur >= 2 ? new int[]{min,last - first} : new int[]{-1,-1};
    }
}
