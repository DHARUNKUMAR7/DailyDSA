class Solution {
    int maxgold=0;
    public int getMaximumGold(int[][] grid) {
        int m=grid.length;
        int n=grid[0].length;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]!=0){
                    int[][] vis=new int[m][n];
                    gold(grid,vis,grid[i][j],i,j);
                }
            }
        }
        return maxgold;
            
    }
    public void gold(int[][] grid,int[][] vis,int a,int i,int j){
        maxgold=Math.max(maxgold,a);
        int m=grid.length;
        int n=grid[0].length;
        vis[i][j]=1;
        if(i<m&&j<n){
            if(j-1>=0&&vis[i][j-1]==0&&grid[i][j-1]!=0){
                gold(grid,vis,a+grid[i][j-1],i,j-1);
            }
            if(j+1<n&&vis[i][j+1]==0&&grid[i][j+1]!=0){
                gold(grid,vis,a+grid[i][j+1],i,j+1);
            }
            if(i-1>=0&&vis[i-1][j]==0&&grid[i-1][j]!=0){
                gold(grid,vis,a+grid[i-1][j],i-1,j);
            }
            if(i+1<m&&vis[i+1][j]==0&&grid[i+1][j]!=0){
                gold(grid,vis,a+grid[i+1][j],i+1,j);
            }
            
        }
        vis[i][j]=0;
            
    }
}
